<sdf version='1.6'>
  <world name='default'>
    <light name='sun' type='directional'>
      <cast_shadows>0</cast_shadows>
      <pose frame=''>0 0 10 0 -0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>
    <include>
     <uri>model://ground_plane</uri>
    </include>     
    <gravity>0 0 -9.8</gravity>
    <magnetic_field>6e-06 2.3e-05 -4.2e-05</magnetic_field>
    <atmosphere type='adiabatic'/>
    <physics name='default_physics' default='0' type='ode'>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>1000</real_time_update_rate>
    </physics>
    <scene>
      <ambient>0.4 0.4 0.4 1</ambient>
      <background>0.7 0.7 0.7 1</background>
      <shadows>0</shadows>
    </scene>
    <spherical_coordinates>
      <surface_model>EARTH_WGS84</surface_model>
      <latitude_deg>0</latitude_deg>
      <longitude_deg>0</longitude_deg>
      <elevation>0</elevation>
      <heading_deg>0</heading_deg>
    </spherical_coordinates>
    <state world_name='default'>
      <sim_time>0 0</sim_time>
      <real_time>0 0</real_time>
      <wall_time>0 0</wall_time>
    </state>
  <model name="concrete_0">
    <pose>4.5 0 -3.5 0 0 0</pose>
    <static>true</static>
    <link name="link_">
      <pose>0.0 0 0 0 0 0</pose>
      <collision name="collision_concrete_0">
        <geometry>
          <mesh><uri>model://SI/models/MezzanineWalls_concrete.dae</uri></mesh>
        </geometry>
      </collision>
      <visual name="visual_concrete_0">
        <geometry>
          <mesh><uri>model://SI/models/MezzanineWalls_concrete.dae</uri></mesh>
        </geometry>
      </visual>
    </link>
  </model>
  <model name="source_0">
    <pose>1 1 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_0" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_0/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="source_1">
    <pose>2 2 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_1" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_1/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="source_2">
    <pose>3 3 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_2" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_2/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="source_3">
    <pose>4 4 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_3" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_3/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="source_4">
    <pose>5 5 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_4" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_4/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="source_5">
    <pose>6 6 0 0 0 0</pose> <!-- x y z roll pitch yaw -->
    <static>true</static>
    <link name="link">
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size> <!-- length width height -->
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- RGBA for green -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_source_5" type="radiation_source">
        <always_on> 1 </always_on>
        <update_rate> 1.0 </update_rate>
        <topic>source_5/gamma</topic>
        <plugin filename="libradiation_source_plugin.so" name="radiation_source_plugin" />
      </sensor>
    </link>
  </model>
  <model name="sensor_0">
    <pose>1.5 1.5 0 0 0 0</pose>
    <static>true</static>
    <self_collide>false</self_collide>
    <link name="link">
      <inertial>
        <mass>1.0</mass>
        <inertia>
          <!-- inertias are tricky to compute -->
          <!-- http://gazebosim.org/tutorials?tut=inertia&cat=build_robot -->
          <ixx>0.083</ixx> <!-- for a box: ixx = 0.083 * mass * (y*y + z*z) -->
          <ixy>0.0</ixy> <!-- for a box: ixy = 0 -->
          <ixz>0.0</ixz> <!-- for a box: ixz = 0 -->
          <iyy>0.083</iyy> <!-- for a box: iyy = 0.083 * mass * (x*x + z*z) -->
          <iyz>0.0</iyz> <!-- for a box: iyz = 0 -->
          <izz>0.083</izz> <!-- for a box: izz = 0.083 * mass * (x*x + y*y) -->
        </inertia>
      </inertial>
      <!--
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
      </collision>
      -->
      <visual name="visual">
        <pose> 0 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient>
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
      <sensor name="radiation_sensor_0" type="radiation_sensor">
        <always_on> 1 </always_on>
        <update_rate> 1000.0 </update_rate>
        <topic>sensor_0</topic>
        <plugin name="radiation_sensor_plugin" filename="libradiation_sensor_plugin.so" />
      </sensor>

    </link>
    <model name="sensor_face">
      <pose>0.1 0 0.0 0 0 0</pose>
      <static>true</static>
      <link name="sensor_face_link">
        <pose>0.0 0 0 0 0 0</pose>
        <visual name="sensor_face_visual">
          <geometry>
            <box>
              <size>0.01 0.1 0.1</size>
            </box>
          </geometry>
          <material>
            <ambient>0.0 0.6 0.0 1.0</ambient>
            <diffuse>0.0 0.6 0.0 1.0</diffuse>
          </material>
        </visual>
      </link>
    </model>

  </model>
    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose frame=''>29.9048 -41.3003 20.9457 0 0.275643 2.35619</pose>
        <view_controller>orbit</view_controller>
        <projection_type>perspective</projection_type>
      </camera>
    </gui>
  </world>
</sdf>
